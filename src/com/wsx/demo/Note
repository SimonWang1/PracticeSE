算法与数据结构基础：
算法：
二分查找：有序数组进行快速查找
大O表示法：排序运行时间，表示速率，最糟情况和平均情况
选择排序：按顺序比较每一个元素的大小，重新进行排列
数据结构：
数组：元素在一起，查询快，O(1)，添加O(n)
链表：储存下一个元素的地址，添加删除快，O(1)，查询O(n)
索引：表示元素的位置
队列：队头读取队尾插，先进先出，使用链表
链表数组：结合两者优点
递归：函数自己调用自己，都有基线条件和递归条件
栈内存：存储局部变量和对象的引用（堆内存地址），单线程私有内存，占用内存很小，固定生命周期，
使用递归JVM易抛出StackOverFlowError异常
调用栈：在栈顶进行压入（插入）和弹出（删除并读取）操作，输入先进后出，输出后进先出
堆内存：存储对象和全局变量，能被所有线程访问，占用内存大，使用GC机制回收，
内存溢出JVM抛出OutOfMemoryError异常
队列：先进先出，基于链表，在队头队尾进行操作，对应广度优先搜索
散列函数：将输入映射成数字，定位到散列表的数组索引，若索引存在元素，将键值对内容添加到该索引对应链表中
散列表：键值对形式，查找添加删除都很快，平均情况O(1)，基于数组，链表，散列函数实现，
Java中对应HashTable和重写的HashCode（对比数组索引相同）和equals（对比链表内容相同）方法

面向对象基础：
封装：使用private封装属性，提供公有的set，get方法供其他类调用，起到隐藏类属性的作用
继承/抽象：代码复用的重要手段，使用关键字extends/implements进行属性和方法的复用
多态：操作符多态，表示数字运算或字符串连接。类多态发生在已存在继承/抽象并重写方法的条件下，
父类引用指向子类对象，调用同一个方法，呈现不同的形态
final：修饰类不能被继承/实现，修饰方法不能被重写，修饰变量/引用表示只有一次赋值/指向机会
抽象类与接口的区别：
抽象类单继承，接口多实现
抽象类本身还是类，可以修饰成不同的访问权限、是否static、是否final，抽象类默认声明public static final
创建对象的执行顺序依次为（父类→子类）静态代码块，属性声明，普通初始化块，无参构造器，带参构造器

Collection Framework:
ArrayList: 基于可增长数组，查询快，添加删除慢，线程不安全
Vector: 与ArrayList基本相同，线程安全，效率低用的不多
LinkedList: 基于双向链表，间接实现了队列接口，查询慢，添加删除快，线程不安全
HashSet: 本质是散列表的键，不允许重复，添加没有顺序，线程不安全
HashMap: 散列表键值对形式，键唯一，查询添加删除速度快，线程不安全
HashTable: 与HashMap基本相同，不能存放null，线程安全

TreeSet: 自动排序
LinkedHashSet: 按照添加排序
TreeMap: 自动按键排序
LinkedHashMap: 按照添加排序

函数式初级：
Lambda表达式是匿名方法的简写，使代码更加简洁，编译时虚拟机当做匿名方法处理
优点：
快速创建接口抽象方法，当使用接口做参数时，使用Lambda表达式可以方便的进行传参，代码简洁
缺点：
当Lambda表达式较长时可读性差，调试困难，不向上兼容

网络安全：
Socket：对TCP/IP协议族的封装，是接口不是协议，属于长连接
HTTPS：超文本传输安全协议，使用SSL加密属于安全协议
HTTP：超文本传输协议，基于TCP/IP的应用层协议，用于浏览器和服务器之间的通信，
短连接，一次会话结束后就中断，常用于定时向服务器端发送请求判断登录状态
方式是通过request和response协议，常用方法有GET和POST，
GET速度快，在URL使用明文传输，POST速度慢相对安全，适合传输密码验证登录等功能
FTP：文件传输协议，基于TCP/IP的应用层协议，用于文件传输，速度快
TCP/IP：基于TCP，IP两个初始协议的协议族，包含各种协议
TCP：传输控制协议，使用三次握手四次挥手保证数据可靠性和效率，速度慢，
用于浏览器到服务器的数据传输控制，在数据传输前分割IP包，到达时进行重组
UDP：用户数据报协议，无连接的协议，速度快，一般用于实时通讯
IP：网际协议，用于计算机之间的通信，在互联网上发送和接受数据包
ICMP：因特网消息控制协议，负责网络中的错误处理
DHCP：动态主机配置协议，用于在网络中的计算机动态分配IP地址
域名：类似"http://www.eclipse.org/"，与TCP/IP地址结合用于被DNS服务器识别
OSI七层模型		TCP/IP四层模型			TCP/IP协议族		作用						单位
应用层				应用层						HTTP FTP等			远程访问和资源共享		数据段
表示层
会话层
传输层				传输层						TCP UDP				数据传输和控制			数据包
网络层				Internet层			IP ICMP DHCP等 		主机之间通信				数据帧
数据链路层		网络接口层				以太网等				物理连接、传输功能		比特
物理层
TCP三次握手四次挥手过程：
一次握手：主机A向主机B发送连接请求。		同步比特	SYN=1	确认比特	ACK=0	
二次握手：主机B同意连接返回确认信息。					SYN=1	 			ACK=1			
三次握手：主机A收到确认信息，开始建立连接。			SYN=0				ACK=1
一次挥手：主机A向主机B发送断开请求。		结束比特	FIN=1	确认比特	ACK=1
二次挥手：主机B接受请求后返回确认信息。				FIN=0				ACK=1
三次挥手：主机B向主机A发送断开信息。					FIN=1				ACK=1
四次挥手：主机A收到断开信息，会话结束。				FIN=0				ACK=1
比特Bit：二进制，计算机最小的存储单位

学习数据结构，主攻HashMap，ArrayList，LinkedList。
学习排序算法，主攻快速排序（速度最快），归并排序（Hadoop）。
学习计算机网络，主攻http协议，TCP/IP协议，熟记三次握手，四次挥手的过程。
学习多线程编程，了解线程安全的概念。
学习设计模式，主攻工厂模式，单例模式。

core summarize: 
1、开发能力：
1.1、面向对象编程：组合特性，继承与实现
1.2、函数式编程：Lambda、Kotlin
1.3、集合：常用内部类
2、网络服务器端：
2.1：协议
2.2：IO、多线程
2.3：Socket、Netty、Vert.x
3、前端基础：
4、数据库：
4.1：Mysql、Redis
5、JavaEE：
5.1：封装类
5.2：框架
6、工具：
7、操作系统：
7.1：Linux